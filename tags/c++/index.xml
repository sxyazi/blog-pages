<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Sxyazi’s blog</title><link>https://sxyz.blog/tags/c++/</link><description>Recent content in C++ on Sxyazi’s blog</description><language>zh-CN</language><lastBuildDate>Mon, 22 Nov 2021 21:19:15 +0800</lastBuildDate><atom:link href="https://sxyz.blog/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ 引用与 const</title><link>https://sxyz.blog/cpp-reference-with-const/</link><pubDate>Mon, 22 Nov 2021 21:19:15 +0800</pubDate><guid>https://sxyz.blog/cpp-reference-with-const/</guid><description>基本概念 引用的本质就是指针，下面两行代码的底层逻辑是一致的 int *p = &amp;amp;a int &amp;amp;ref = a 如果添加 const 限制词，表示不能通过 *p 或 ref 间接修改 a 的值 const int *p = &amp;amp;a const int &amp;amp;ref = a // 等价于 int const *p = &amp;amp;a int const &amp;amp;ref = a 一般常用于参数声明，如 void foo(const int</description></item><item><title>为什么 C++ 模板只能写在一个文件里？</title><link>https://sxyz.blog/why-cpp-templates-only-be-written-in-onefile/</link><pubDate>Wed, 29 Sep 2021 15:49:30 +0800</pubDate><guid>https://sxyz.blog/why-cpp-templates-only-be-written-in-onefile/</guid><description>在一般的 C++ 开发中，习惯将函数声明与实现放在不同的文件中，如声明放在 .h 文件，实现放在 .cpp 文件，并在其它地方引用时只包含 .h 文件。但对于 C++ 的模板，这是一个例外，它只能被写在一个文件中。 普通函数 // test.h int sumInt(int a, int b); //</description></item></channel></rss>