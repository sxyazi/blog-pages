<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Sxyazi’s blog</title><link>https://sxyz.blog/tags/golang/</link><description>Recent content in Golang on Sxyazi’s blog</description><language>zh-CN</language><lastBuildDate>Sat, 22 Apr 2023 21:54:44 +0800</lastBuildDate><atom:link href="https://sxyz.blog/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>绕过 Cloudflare 指纹护盾</title><link>https://sxyz.blog/bypass-cloudflare-shield/</link><pubDate>Sat, 22 Apr 2023 21:54:44 +0800</pubDate><guid>https://sxyz.blog/bypass-cloudflare-shield/</guid><description>最近才知道，除了 TLS 指纹，竟然还有 HTTP/2 指纹，这两种 Cloudflare 都有采用，这篇博客介绍如何绕过它们。 起因 最近发现之前写的搜图 Bot 坏掉了，这个 Bot 接入了 3 个搜索后端，出问题的是 ascii2d.net。由于它最近套上了 Clo</description></item><item><title>Golang 并发缓存实践</title><link>https://sxyz.blog/go-concurrent-cache/</link><pubDate>Tue, 30 Aug 2022 22:37:16 +0800</pubDate><guid>https://sxyz.blog/go-concurrent-cache/</guid><description>并发缓存，顾名思义就是让缓存可以在多个并发的 goroutine 中共享、交错使用，这在爬虫程序中尤其常见，每个新的爬虫任务都希望能够“实时地”复用之前，或正在进行中的任务结果，从而避免重复的网络请求开销。 这篇文章，以 yande.re</description></item><item><title>Golang 协程与通道</title><link>https://sxyz.blog/goroutine-and-channel/</link><pubDate>Sun, 24 Sep 2017 14:33:22 +0800</pubDate><guid>https://sxyz.blog/goroutine-and-channel/</guid><description>这篇文章记录了我学习 Go 语言中的协程与通道的一些笔记，是片断性的。 01. 无缓冲通道 ch := make(chan int) 无缓冲通道只能包含 1 个元素，读和写都是阻塞的。 02. 缓冲通道 ch := make(chan int, 5) 有缓冲的通道可以包含指定个数的元素，读和写都是异步</description></item><item><title>Golang 项目目录结构</title><link>https://sxyz.blog/gopath/</link><pubDate>Sat, 16 Sep 2017 17:02:53 +0800</pubDate><guid>https://sxyz.blog/gopath/</guid><description>项目的目录结构会影响整个项目的文件排布甚至是整个项目的文件架构。所以在开始编写代码之前要先明确项目的目录如何去安排。其它语言可能对项目结构没有什么要求，相对更加自由一些，而 Go 语言做了这方面的规定。这样</description></item><item><title>Golang 指针的一些零散笔记</title><link>https://sxyz.blog/golang-cheatsheet/</link><pubDate>Tue, 12 Sep 2017 18:12:21 +0800</pubDate><guid>https://sxyz.blog/golang-cheatsheet/</guid><description>最近学习了一下 Go 语言，发现里面很多东西都和其他语言都不太一样。下面是学习过程中对 Go 中的指针部分做的一些片段性的笔记。 01. 数组指针 package main import &amp;quot;fmt&amp;quot; func main() { // 一个 [3]int 型数组 arr := [...]int{1, 2, 3} p := &amp;amp;arr // 一个指向 [3]int 型数组的指针 test(p) // 传</description></item></channel></rss>