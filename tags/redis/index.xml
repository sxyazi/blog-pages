<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis on Sxyazi’s blog</title><link>https://sxyz.blog/tags/redis/</link><description>Recent content in Redis on Sxyazi’s blog</description><language>zh-CN</language><lastBuildDate>Wed, 24 May 2017 22:33:43 +0800</lastBuildDate><atom:link href="https://sxyz.blog/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Sentinel 完成自动化 Redis 监控</title><link>https://sxyz.blog/redis-sentinel/</link><pubDate>Wed, 24 May 2017 22:33:43 +0800</pubDate><guid>https://sxyz.blog/redis-sentinel/</guid><description>Redis-Sentinel 是 Redis 官方推荐的高可用性(HA) 解决方案，当用 Redis 做 Master-slave 的高可用方案时，假如 master 宕机了，Redis 本身(包括它的很多客户端) 都没有实现自动进行主备切换，而 Redis-sentinel 本身也是一个独立运行的进程，它能监控多个 master-slave 集群，发</description></item><item><title>Redis 主从配置</title><link>https://sxyz.blog/redis-slaves/</link><pubDate>Thu, 11 May 2017 02:34:23 +0800</pubDate><guid>https://sxyz.blog/redis-slaves/</guid><description>前面写了关于 MySQL 主从配置的文章，这篇文章来写一下 Redis 的主从配置。相对于 MySQL 来说简单了很多。 01. 安装 sudo apt-get update sudo apt-get install redis-server mkdir /tmp/redis # 创建测试目录 02. 拷贝两份配置 ha@alh:~/redis $ cp /etc/redis/redis.conf ./redis.master.conf ha@alh:~/redis $ cp /etc/redis/redis.conf ./redis.slave.conf 03. 分别修改配置文件 redis.master.conf: daemonize yes # 守护进程 pidfile /var/run/redis_master.pid # PI</description></item></channel></rss>